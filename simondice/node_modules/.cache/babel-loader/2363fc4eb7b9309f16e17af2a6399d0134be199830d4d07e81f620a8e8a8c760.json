{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\desafio3\\\\simonDiceReact\\\\simondice\\\\src\\\\componentes\\\\Botonera.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Botonera.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Botonera() {\n  _s();\n  const coloresDisponibles = [\"rojo\", \"azul\", \"verde\", \"amarillo\"];\n  const [secuenciaGenerada, setSecuenciaGenerada] = useState([]);\n  const [secuenciaUsuario, setSecuenciaUsuario] = useState([]);\n  const [rondaActual, setRondaActual] = useState(1);\n  const generarNuevaSecuencia = () => {\n    const nuevoColor = coloresDisponibles[Math.floor(Math.random() * coloresDisponibles.length)];\n    setSecuenciaGenerada(secuenciaAnterior => [...secuenciaAnterior, nuevoColor]);\n    console.log(nuevoColor);\n  };\n  const iniciarJuego = () => {\n    setSecuenciaGenerada([]);\n    setSecuenciaUsuario([]);\n    setRondaActual(1);\n    generarNuevaSecuencia();\n  };\n  const comenzarNuevaRonda = () => {\n    setSecuenciaUsuario([]);\n    generarNuevaSecuencia();\n    setRondaActual(rondaAnterior => rondaAnterior + 1);\n  };\n  const manejarClicColor = color => {\n    if (jugando) {\n      setSecuenciaUsuario(secuenciaAnterior => [...secuenciaAnterior, color]);\n    }\n  };\n  useEffect(() => {\n    if (secuenciaUsuario.length === secuenciaGenerada.length) {\n      if (JSON.stringify(secuenciaUsuario) === JSON.stringify(secuenciaGenerada)) {\n        if (rondaActual < 20) {\n          comenzarNuevaRonda();\n        }\n      } else {\n        alert('¡Perdiste! Intenta de nuevo.');\n      }\n    }\n  }, [secuenciaUsuario, secuenciaGenerada, rondaActual]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simon\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Simon Classic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: iniciarJuego,\n      children: \"Comenzar Juego\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), coloresDisponibles.map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `boton ${color}`,\n      onClick: () => manejarClicColor(color)\n    }, color, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ronda: \", rondaActual]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), jugando && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA1Tu turno!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Botonera, \"PkqXescnm3fNh5KAv6ctmeNmaX8=\");\n_c = Botonera;\nexport default Botonera;\nvar _c;\n$RefreshReg$(_c, \"Botonera\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Botonera","_s","coloresDisponibles","secuenciaGenerada","setSecuenciaGenerada","secuenciaUsuario","setSecuenciaUsuario","rondaActual","setRondaActual","generarNuevaSecuencia","nuevoColor","Math","floor","random","length","secuenciaAnterior","console","log","iniciarJuego","comenzarNuevaRonda","rondaAnterior","manejarClicColor","color","jugando","JSON","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/PC/Documents/desafio3/simonDiceReact/simondice/src/componentes/Botonera.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Botonera.css';\r\n\r\nfunction Botonera() {\r\n  const coloresDisponibles = [\"rojo\", \"azul\", \"verde\", \"amarillo\"];\r\n  const [secuenciaGenerada, setSecuenciaGenerada] = useState([]);\r\n  const [secuenciaUsuario, setSecuenciaUsuario] = useState([]);\r\n  const [rondaActual, setRondaActual] = useState(1);\r\n\r\n  const generarNuevaSecuencia = () => {\r\n    const nuevoColor = coloresDisponibles[Math.floor(Math.random() * coloresDisponibles.length)];\r\n    setSecuenciaGenerada((secuenciaAnterior) => [...secuenciaAnterior, nuevoColor]);\r\n    console.log(nuevoColor);\r\n  };\r\n\r\n  const iniciarJuego = () => {\r\n    setSecuenciaGenerada([]);\r\n    setSecuenciaUsuario([]);\r\n    setRondaActual(1);\r\n    generarNuevaSecuencia();\r\n  };\r\n\r\n  const comenzarNuevaRonda = () => {\r\n    setSecuenciaUsuario([]);\r\n    generarNuevaSecuencia();\r\n    setRondaActual((rondaAnterior) => rondaAnterior + 1);\r\n  };\r\n\r\n  const manejarClicColor = (color) => {\r\n    if (jugando) {\r\n      setSecuenciaUsuario((secuenciaAnterior) => [...secuenciaAnterior, color]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (secuenciaUsuario.length === secuenciaGenerada.length) {\r\n      if (JSON.stringify(secuenciaUsuario) === JSON.stringify(secuenciaGenerada)) {\r\n        if (rondaActual < 20) {\r\n          comenzarNuevaRonda();\r\n        } \r\n      } else {\r\n        alert('¡Perdiste! Intenta de nuevo.');\r\n      }\r\n    }\r\n  }, [secuenciaUsuario, secuenciaGenerada, rondaActual]);\r\n\r\n  return (\r\n    <div className=\"simon\">\r\n      <h2>Simon Classic</h2>\r\n      <button onClick={iniciarJuego}>Comenzar Juego</button>\r\n      {coloresDisponibles.map((color) => (\r\n        <button\r\n          key={color}\r\n          className={`boton ${color}`}\r\n          onClick={() => manejarClicColor(color)}\r\n        ></button>\r\n      ))}\r\n      <div>\r\n        <p>Ronda: {rondaActual}</p>\r\n        {jugando && <p>¡Tu turno!</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Botonera;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
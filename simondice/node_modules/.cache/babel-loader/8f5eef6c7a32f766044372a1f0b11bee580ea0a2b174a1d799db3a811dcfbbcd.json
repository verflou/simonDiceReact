{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\desafio3\\\\simonDiceReact\\\\simondice\\\\src\\\\componentes\\\\Botonera.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Botonera.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Botonera() {\n  _s();\n  const colores = [\"rojo\", \"azul\", \"verde\", \"amarillo\"];\n  const [secuencia, setSecuencia] = useState([]);\n  const [secuenciaUsuario, setSecuenciaUsuario] = useState([]);\n  const [ronda, setRonda] = useState(1);\n  const [jugando, setJugando] = useState(false);\n  const [mensaje, setMensaje] = useState(\"Presiona Iniciar\");\n  const comenzarNuevaRonda = () => {\n    const indiceColorAleatorio = Math.floor(Math.random() * colores.length);\n    setRonda(ronda + 1);\n    setJugando(true);\n    setMensaje(`Ronda ${ronda}`);\n    mostrarSecuencia();\n  };\n  const mostrarSecuencia = () => {\n    let i = 0;\n    const intervalo = setInterval(() => {\n      if (i < secuencia.length) {\n        console.log(secuencia[i]);\n        i++;\n      } else {\n        clearInterval(intervalo);\n        setJugando(false);\n        setMensaje(\"Tu turno. Repite la secuencia.\");\n      }\n    }, 1000 * secuencia.length);\n  };\n  const handleBotonClick = color => {\n    if (jugando) {\n      setSecuenciaUsuario([...secuenciaUsuario, color]);\n      if (JSON.stringify(secuenciaUsuario) === JSON.stringify(secuencia.slice(0, secuenciaUsuario.length))) {\n        if (secuenciaUsuario.length === secuencia.length) {\n          if (secuencia.length === ronda) {\n            setMensaje(\"¡Ronda completada! Presiona Iniciar.\");\n            setSecuencia([]);\n            setRonda(1);\n            setJugando(false);\n          } else {\n            setMensaje(\"Correcto. Siguiente color...\");\n            setSecuenciaUsuario([]);\n            setTimeout(comenzarNuevaRonda, 1000);\n          }\n        }\n      } else {\n        setMensaje(\"¡Has perdido! Presiona Iniciar para jugar de nuevo.\");\n        setSecuencia([]);\n        setRonda(1);\n        setJugando(false);\n      }\n    }\n  };\n  const iniciarJuego = () => {\n    setSecuencia([]);\n    setSecuenciaUsuario([]);\n    setRonda(1);\n    comenzarNuevaRonda();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"botonera\",\n      children: colores.map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `boton ${color}`,\n        onClick: () => handleBotonClick(color),\n        disabled: !jugando\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"informacion\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ronda: \", ronda]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: mensaje\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: iniciarJuego,\n      disabled: jugando,\n      children: \"Iniciar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Botonera, \"G8evi7+o+dhOzXvtu5q9FY7OSdU=\");\n_c = Botonera;\nexport default Botonera;\nvar _c;\n$RefreshReg$(_c, \"Botonera\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Botonera","_s","colores","secuencia","setSecuencia","secuenciaUsuario","setSecuenciaUsuario","ronda","setRonda","jugando","setJugando","mensaje","setMensaje","comenzarNuevaRonda","indiceColorAleatorio","Math","floor","random","length","mostrarSecuencia","i","intervalo","setInterval","console","log","clearInterval","handleBotonClick","color","JSON","stringify","slice","setTimeout","iniciarJuego","children","className","map","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Documents/desafio3/simonDiceReact/simondice/src/componentes/Botonera.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Botonera.css';\r\n\r\nfunction Botonera() {\r\n  const colores = [\"rojo\", \"azul\", \"verde\", \"amarillo\"];\r\n  const [secuencia, setSecuencia] = useState([]);\r\n  const [secuenciaUsuario, setSecuenciaUsuario] = useState([]);\r\n  const [ronda, setRonda] = useState(1);\r\n  const [jugando, setJugando] = useState(false);\r\n  const [mensaje, setMensaje] = useState(\"Presiona Iniciar\");\r\n\r\n  const comenzarNuevaRonda = () => {\r\n    const indiceColorAleatorio = Math.floor(Math.random() * colores.length);\r\n    setRonda(ronda + 1);\r\n    setJugando(true);\r\n    setMensaje(`Ronda ${ronda}`);\r\n    mostrarSecuencia();\r\n  };\r\n\r\n  const mostrarSecuencia = () => {\r\n    let i = 0;\r\n    const intervalo = setInterval(() => {\r\n      if (i < secuencia.length) {\r\n        console.log(secuencia[i]);\r\n        i++;\r\n      } else {\r\n        clearInterval(intervalo);\r\n        setJugando(false);\r\n        setMensaje(\"Tu turno. Repite la secuencia.\");\r\n      }\r\n    }, 1000 * secuencia.length);\r\n  };\r\n\r\n  const handleBotonClick = (color) => {\r\n    if (jugando) {\r\n      setSecuenciaUsuario([...secuenciaUsuario, color]);\r\n\r\n      if (JSON.stringify(secuenciaUsuario) === JSON.stringify(secuencia.slice(0, secuenciaUsuario.length))) {\r\n        if (secuenciaUsuario.length === secuencia.length) {\r\n          if (secuencia.length === ronda) {\r\n            setMensaje(\"¡Ronda completada! Presiona Iniciar.\");\r\n            setSecuencia([]);\r\n            setRonda(1);\r\n            setJugando(false);\r\n          } else {\r\n            setMensaje(\"Correcto. Siguiente color...\");\r\n            setSecuenciaUsuario([]);\r\n            setTimeout(comenzarNuevaRonda, 1000);\r\n          }\r\n        }\r\n      } else {\r\n        setMensaje(\"¡Has perdido! Presiona Iniciar para jugar de nuevo.\");\r\n        setSecuencia([]);\r\n        setRonda(1);\r\n        setJugando(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const iniciarJuego = () => {\r\n    setSecuencia([]);\r\n    setSecuenciaUsuario([]);\r\n    setRonda(1);\r\n    comenzarNuevaRonda();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"botonera\">\r\n        {colores.map((color) => (\r\n          <button\r\n            key={color}\r\n            className={`boton ${color}`}\r\n            onClick={() => handleBotonClick(color)}\r\n            disabled={!jugando}\r\n          ></button>\r\n        ))}\r\n      </div>\r\n      <div className=\"informacion\">\r\n        <p>Ronda: {ronda}</p>\r\n        <p>{mensaje}</p>\r\n      </div>\r\n      <button onClick={iniciarJuego} disabled={jugando}>\r\n        Iniciar\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Botonera;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
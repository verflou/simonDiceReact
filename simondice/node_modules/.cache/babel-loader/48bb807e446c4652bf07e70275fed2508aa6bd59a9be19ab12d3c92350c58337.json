{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\desafio3\\\\simonDiceReact\\\\simondice\\\\src\\\\componentes\\\\Botonera.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Botonera.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Botonera() {\n  _s();\n  const colors = [\"rojo\", \"azul\", \"verde\", \"amarillo\"];\n  const [sequence, setSequence] = useState([]);\n  const [userSequence, setUserSequence] = useState([]);\n  const [round, setRound] = useState(1);\n  ;\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Genera una nueva secuencia en cada ronda\n  const generateSequence = () => {\n    const newColor = colors[Math.floor(Math.random() * colors.length)];\n    setSequence(prevSequence => [...prevSequence, newColor]);\n    console.log(newColor);\n  };\n\n  // Inicia un nuevo juego\n  const startGame = () => {\n    setSequence([]);\n    setUserSequence([]);\n    setRound(1);\n    generateSequence();\n    setIsPlaying(true);\n  };\n\n  // Comienza una nueva ronda\n  const startNewRound = () => {\n    setUserSequence([]);\n    generateSequence();\n    setRound(prevRound => prevRound + 1);\n  };\n\n  // Maneja el clic del usuario en un botón\n  const handleColorClick = color => {\n    if (isPlaying) {\n      setUserSequence(prevUserSequence => [...prevUserSequence, color]);\n    }\n  };\n  // Función para resaltar la secuencia\n  const highlightSequence = () => {\n    setSequenceHighlight(true);\n    setTimeout(() => {\n      setSequenceHighlight(false);\n    }, 500); // Restaura el color original después de 0.5 segundos\n  };\n\n  // Comprueba si la secuencia del usuario coincide con la secuencia generada\n  useEffect(() => {\n    if (userSequence.length === sequence.length) {\n      if (JSON.stringify(userSequence) === JSON.stringify(sequence)) {\n        if (round < 20) {\n          startNewRound();\n        } else {\n          alert('¡Ganaste el juego!');\n          setIsPlaying(false);\n        }\n      } else {\n        alert('¡Perdiste! Intenta de nuevo.');\n        setIsPlaying(false);\n      }\n    }\n  }, [userSequence, sequence, round]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simon\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Simon Classic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Comenzar Juego\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), colors.map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `boton ${color} ${sequenceHighlight && 'highlight'}`,\n      onClick: () => {\n        handleColorClick(color);\n        if (isPlaying) {\n          highlightSequence(); // Resalta la secuencia al hacer clic\n        }\n      }\n    }, color, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ronda: \", round]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), isPlaying && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA1Tu turno!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Botonera, \"G+67cpOzYsFQkbZ6jQmZsz086PI=\");\n_c = Botonera;\nexport default Botonera;\nvar _c;\n$RefreshReg$(_c, \"Botonera\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Botonera","_s","colors","sequence","setSequence","userSequence","setUserSequence","round","setRound","isPlaying","setIsPlaying","generateSequence","newColor","Math","floor","random","length","prevSequence","console","log","startGame","startNewRound","prevRound","handleColorClick","color","prevUserSequence","highlightSequence","setSequenceHighlight","setTimeout","JSON","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","sequenceHighlight","_c","$RefreshReg$"],"sources":["C:/Users/PC/Documents/desafio3/simonDiceReact/simondice/src/componentes/Botonera.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Botonera.css';\r\n\r\nfunction Botonera() {\r\n  const colors = [\"rojo\", \"azul\", \"verde\", \"amarillo\"];\r\n  const [sequence, setSequence] = useState([]);\r\n  const [userSequence, setUserSequence] = useState([]);\r\n  const [round, setRound] = useState(1);;\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  // Genera una nueva secuencia en cada ronda\r\n  const generateSequence = () => {\r\n    const newColor = colors[Math.floor(Math.random() * colors.length)];\r\n    setSequence((prevSequence) => [...prevSequence, newColor]);\r\n    console.log(newColor);\r\n  };\r\n\r\n  // Inicia un nuevo juego\r\n  const startGame = () => {\r\n    setSequence([]);\r\n    setUserSequence([]);\r\n    setRound(1);\r\n    generateSequence();\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  // Comienza una nueva ronda\r\n  const startNewRound = () => {\r\n    setUserSequence([]);\r\n    generateSequence();\r\n    setRound((prevRound) => prevRound + 1);\r\n  };\r\n\r\n  // Maneja el clic del usuario en un botón\r\n  const handleColorClick = (color) => {\r\n    if (isPlaying) {\r\n      setUserSequence((prevUserSequence) => [...prevUserSequence, color]);\r\n    }\r\n  };\r\n    // Función para resaltar la secuencia\r\n    const highlightSequence = () => {\r\n      setSequenceHighlight(true);\r\n      setTimeout(() => {\r\n        setSequenceHighlight(false);\r\n      }, 500); // Restaura el color original después de 0.5 segundos\r\n    };\r\n\r\n  // Comprueba si la secuencia del usuario coincide con la secuencia generada\r\n  useEffect(() => {\r\n    if (userSequence.length === sequence.length) {\r\n      if (JSON.stringify(userSequence) === JSON.stringify(sequence)) {\r\n        if (round < 20) {\r\n          startNewRound();\r\n        } else {\r\n          alert('¡Ganaste el juego!');\r\n          setIsPlaying(false);\r\n        }\r\n      } else {\r\n        alert('¡Perdiste! Intenta de nuevo.');\r\n        setIsPlaying(false);\r\n      }\r\n    }\r\n  }, [userSequence, sequence, round]);\r\n\r\n  return (\r\n    <div className=\"simon\">\r\n      <h2>Simon Classic</h2>\r\n      <button onClick={startGame}>Comenzar Juego</button>\r\n      {colors.map((color) => (\r\n        <button\r\n          key={color}\r\n          className={`boton ${color} ${sequenceHighlight && 'highlight'}`}\r\n          onClick={() => {\r\n            handleColorClick(color);\r\n            if (isPlaying) {\r\n              highlightSequence(); // Resalta la secuencia al hacer clic\r\n            }\r\n          }}\r\n        ></button>\r\n      ))}\r\n      <div>\r\n        <p>Ronda: {round}</p>\r\n        {isPlaying && <p>¡Tu turno!</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Botonera;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC;EACpD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAAC;EACtC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,QAAQ,GAAGV,MAAM,CAACW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGb,MAAM,CAACc,MAAM,CAAC,CAAC;IAClEZ,WAAW,CAAEa,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEL,QAAQ,CAAC,CAAC;IAC1DM,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;EACvB,CAAC;;EAED;EACA,MAAMQ,SAAS,GAAGA,CAAA,KAAM;IACtBhB,WAAW,CAAC,EAAE,CAAC;IACfE,eAAe,CAAC,EAAE,CAAC;IACnBE,QAAQ,CAAC,CAAC,CAAC;IACXG,gBAAgB,CAAC,CAAC;IAClBD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1Bf,eAAe,CAAC,EAAE,CAAC;IACnBK,gBAAgB,CAAC,CAAC;IAClBH,QAAQ,CAAEc,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EACxC,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIf,SAAS,EAAE;MACbH,eAAe,CAAEmB,gBAAgB,IAAK,CAAC,GAAGA,gBAAgB,EAAED,KAAK,CAAC,CAAC;IACrE;EACF,CAAC;EACC;EACA,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9BC,oBAAoB,CAAC,IAAI,CAAC;IAC1BC,UAAU,CAAC,MAAM;MACfD,oBAAoB,CAAC,KAAK,CAAC;IAC7B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX,CAAC;;EAEH;EACA9B,SAAS,CAAC,MAAM;IACd,IAAIQ,YAAY,CAACW,MAAM,KAAKb,QAAQ,CAACa,MAAM,EAAE;MAC3C,IAAIa,IAAI,CAACC,SAAS,CAACzB,YAAY,CAAC,KAAKwB,IAAI,CAACC,SAAS,CAAC3B,QAAQ,CAAC,EAAE;QAC7D,IAAII,KAAK,GAAG,EAAE,EAAE;UACdc,aAAa,CAAC,CAAC;QACjB,CAAC,MAAM;UACLU,KAAK,CAAC,oBAAoB,CAAC;UAC3BrB,YAAY,CAAC,KAAK,CAAC;QACrB;MACF,CAAC,MAAM;QACLqB,KAAK,CAAC,8BAA8B,CAAC;QACrCrB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF;EACF,CAAC,EAAE,CAACL,YAAY,EAAEF,QAAQ,EAAEI,KAAK,CAAC,CAAC;EAEnC,oBACER,OAAA;IAAKiC,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBlC,OAAA;MAAAkC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBtC,OAAA;MAAQuC,OAAO,EAAElB,SAAU;MAAAa,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClDnC,MAAM,CAACqC,GAAG,CAAEf,KAAK,iBAChBzB,OAAA;MAEEiC,SAAS,EAAG,SAAQR,KAAM,IAAGgB,iBAAiB,IAAI,WAAY,EAAE;MAChEF,OAAO,EAAEA,CAAA,KAAM;QACbf,gBAAgB,CAACC,KAAK,CAAC;QACvB,IAAIf,SAAS,EAAE;UACbiB,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACvB;MACF;IAAE,GAPGF,KAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQH,CACV,CAAC,eACFtC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAAkC,QAAA,GAAG,SAAO,EAAC1B,KAAK;MAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpB5B,SAAS,iBAAIV,OAAA;QAAAkC,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpC,EAAA,CAnFQD,QAAQ;AAAAyC,EAAA,GAARzC,QAAQ;AAqFjB,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}